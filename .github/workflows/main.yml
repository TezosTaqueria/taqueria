# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will build project using Deno and then run tests using Node:
# For more information aboud Deno see: https://github.com/denoland/setup-deno
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions


name: Taqueria

on:
  # push:
  #   branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_taqueria:
    runs-on: ubuntu-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v2

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: "^1.0.0"

      - name: Get Workflow Info
        uses: actions/github-script@v5
        id: gatherInfo
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            console.log(context)
            console.log(context.repo.owner)
            console.log(context.repo.repo)
            console.log(context.runNumber)



      # Uncomment this step to verify the use of 'deno fmt' on each commit.
      # - name: Verify formatting
      #   run: deno fmt --check

      # - name: Run linter
      #   run: deno lint

      # - name: Run tests
      #   run: deno test -A --unstable
      
      - name: Build taqueria
        run: ./bin/build.sh

      - name: Upload Taqueria Binary 
        uses: actions/upload-artifact@v2
        if: success()
        with:
          name: taqueria
          path: /home/runner/work/taqueria/taqueria/taqueria

      - name: Get artifact for Repo
        uses: actions/github-script@v5
        id: getArtifactFromRepo
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
      
      - run: echo ${{steps.getArtifactFromRepo.outputs.result}}

      - name: Get artifact from previous step
        uses: actions/github-script@v5
        id: getArtifact
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runNumber
            })

      - run: echo ${{steps.getArtifact.outputs.result}}

      - name: Comment Artifact to PR
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Alex's comments"
            })


      # - name: Try to get Artifact Info
      # - uses: octokit/request-action@v2.1.0
      #   id: artifacts
      #   with:
      #     GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      #     route: GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts
      #     owner: ecadlabs,
      #     repo: taqueria,
      #     run_id: ${{ steps.gatherInfo.output.runNumber }}
      
      # - run: "echo artifacts: ${{ steps.gatherInfo.outputs.result.runNumber }}"

  build_others:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Setup repo
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Setup Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: "^1.0.0"

    # - name: Run build script
    #   run: ./bin/build.sh 

    # - name: Build protocol
    #   run: npm install

    - name: Go to SDK directory, install and build
      run: |
        cd taqueria-sdk
        npm install
        npm run build

    # - name: Install Dependencies for SDK
    #   run: npm install

    # - name: Build SDK
    #   run: npm run build

    # - run: npm ci
    # - run: npm run build --if-present
    # - run: npm test
