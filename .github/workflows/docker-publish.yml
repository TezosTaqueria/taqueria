name: Docker Image CI

on:
  push:
    branches:
      - 'main'
    paths:
      - 'taqueria-plugin-flextesa/docker/*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'
    paths:
      - 'taqueria-plugin-flextesa/docker/*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.ref != 'refs/heads/main' || github.run_number }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2

      - name: Registry login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: image-metadata
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/taqueria-flextesa
          tags: |
            type=ref,event=branch
            type=ref,event=pr,suffix=-{{sha}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Install npm dependencies
        run: npm ci

      - name: Build package
        run: npm run build -w taqueria-plugin-flextesa/docker

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./taqueria-plugin-flextesa/docker/
          push: true
          tags: ${{ steps.image-metadata.outputs.tags }}
          labels: ${{ steps.image-metadata.outputs.labels }}

      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'The latest docker name:tag for this PR is ***${{ steps.image-metadata.outputs.tags }}*** :whale: :ship:'
            })