---
title: Hello Tacos Scaffold
---

```shell
taq scaffold https://github.com/ecadlabs/taqueria-scaffold-hello-tacos hello-tacos
```
## Introduction

This scaffold is a simple Hello ~~World~~ *_Tacos_* Tezos dApp. It has a simple React app that interacts with a LIGO smart contract which can be deployed on a local sandbox, or testnet

The project is pre-configured with the following:
- Taqueria v0.3.0 and the LIGO, Flextesa, and Taquito plugins
- A LIGO smart contract `hello-tacos.mligo`  
- A basic React dApp that connects to your wallet with Beacon and interacts with the contract on the testnet

***Coming soon***
- Native Taqueria testing
- Passing the deployed contract address to the React app via the State API
- Deploying and testing on a local sandbox

## Project Overview

The projct is structured as follows:
- `/.taq` - This hidden folder stores the project configuration and State
- `/app` - This is the React app
- `/contracts` - This folder contains the LIGO smart contracts
- `/tests` - This folder contains the tests
- `/artifacts` - This folder contains the compiled Michelson `.tz` contracts

The smart contract `hello-tacos.mligo` is simple and straightforward. It stores the number of available tacos, and provides a method to buy tacos which will decrease the number of tacos available 

```js
type available_tacos = nat
type tacos_to_buy = nat

let main (tacos_to_buy, available_tacos: tacos_to_buy * available_tacos): operation list * available_tacos =
    if tacos_to_buy > available_tacos
    then (failwith "NOT_ENOUGH_TACOS": operation list * available_tacos)
    else ([]: operation list), abs(available_tacos - tacos_to_buy)
```

The React app retrieves the number of available tacos from the smart contract and displays the value. It provides an interface for the user to buy tacos and looks like this:

<img src={useBaseUrl('/img/hello-tacos-screenshot.png')} />

:::note
In order for the React app to connect to the smart contract, the contract must be deployed to the testnet and the returned address of the contract must be added to the `/app/index.tsx` file:

This will be fixed in the future when it will be passed via the State API dynamically
:::

## Requirements

- Node.js v16.x (or later)
- Docker v 0.8.0 (or later)
- Taqueria v0.3.1 (or later)
- Temple Wallet (latest version)


## Scaffold the Project

This project is available as a Taqueria scaffold. To create a new project from this scaffold, run the following command:

```shell
taq scaffold https://github.com/ecadlabs/taqueria-scaffold-hello-tacos-tutorial hello-tacos
```

This will clone the Hello Tacos scaffold project into the `hello-tacos` directory

## Project Setup

To set up the project, first change into the project directory:
```shell
cd hello-tacos
```

Next, initialize the project with Taqueria:
```shell
taq init
```

Then install dependencies:
```
npm install
```

## Using the Project

The intended workflow for this project is as follows:
1. Compile the LIGO source code
2. Originate the smart contract to the testnet
3. Insert the contract address into the React app
4. Build and start the React app
5. Connect to Temple wallet
6. Buy tacos!

### Compile the Contract

```shell
taq compile
```

### Originate to the Testnet

Run the following command to originate the contract to the ithacanet testnet:
```shell
taq originate -e ithacanet
```

This should return the address of the contract on the testnet which looks like this:
```shell

```


###



- **** Coming soon with the State API *****